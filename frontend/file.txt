        <div className='option'>
          <p>Category</p>
          <IoIosArrowDown/>
        </div>
        <div className='option'>
          <p>Pricing</p>
          <IoIosArrowDown/>
        </div>

         <Header/>
        <Routes>
        <Route path="/product/:id" element={<ProductDetails/>} />
        <Route path="/" element={<Main/>} />
        <Route path="/products/:keyword" element={<Main/>} />
      <Route path="/login" element={<Login/>} />
      <Route path="/register" element={<Register/>} />
      <Route path="/me/update" element={<UpdateProfile/>} />
      <Route path="/password/change" element={<ChangePassword/>} />
      <Route path="/forgot" element={<ForgotPassword/>} />
      <Route path="/wishlist" element={<WishList/>} />
      <Route path="/password/reset/:token" element={<ResetPassword/>} />

      </Routes>


      import React, { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import { useDispatch, useSelector } from "react-redux";
import { useAlert } from "react-alert";
import { ThreeDots } from "react-loader-spinner";

import {
  clearErrors,
} from "../../Redux/ActionCreater/UserAction";
import { useNavigate } from "react-router-dom";
import { artistRegister } from "../../../Redux/ActionCreater/ArtistAction";


const dispatch = useDispatch();
  const alert = useAlert();
  const navigate = useNavigate();

  const { error, loading, isAuthenticated } = useSelector(
    (state) => state.user
  );
  const [user, setUser] = useState({
    name: "",
    email: "",
    password: "",
  });
  const { name, email, password } = user;

  const [avatar, setAvatar] = useState("/logo512.png");
  const [avatarPreview, setAvatarPreview] = useState("/logo512.png");

  const registerSubmit = (e) => {
    e.preventDefault();

    const myForm = new FormData();

    myForm.set("name", name);
    myForm.set("email", email);
    myForm.set("password", password);
    myForm.set("avatar", avatar);
    dispatch(artistRegister(myForm));
  };

  const registerDataChange = (e) => {
    if (e.target.name === "avatar") {
      const reader = new FileReader();

      reader.onload = () => {
        if (reader.readyState === 2) {
          setAvatarPreview(reader.result);
          setAvatar(reader.result);
        }
      };

      reader.readAsDataURL(e.target.files[0]);
    } else {
      setUser({ ...user, [e.target.name]: e.target.value });
    }
  };

  useEffect(() => {
    if (error) {
      alert.error(error);
      dispatch(clearErrors());
    }
    if (isAuthenticated) {
      navigate("/");
    }
  }, [dispatch, error, alert, isAuthenticated, navigate]);

  return (
    <>
      {loading ? (
        <div className="loader">
          <ThreeDots
            type="Spinner Type"
            color="crimson"
            height={80}
            width={80}
          />
        </div>
      ) :
   ( <div className=" Register Login">
      <h3>Get Started!</h3>
      <p>Register on Bazaar</p>
      <form>
        <input
          type="text"
          placeholder="username"
          name="name"
          onChange={registerDataChange}
          required
        />
        <input
          type="email"
          placeholder="email"
          name="email"
          onChange={registerDataChange}
          required
        />
        <input
          type="password"
          placeholder="password"
          name="password"
          onChange={registerDataChange}
          required
        />
        <div className="pic">
          <img src={avatarPreview} alt="Avatar Preview" />
          <input
            type="file"
            name="avatar"
            accept="image/*"
            onChange={registerDataChange}
            className="custom-file-input"
          />
        </div>
        <input
          type="submit"
          value="Register"
          className="login-btn"
          onClick={registerSubmit}
        />
      </form>
      <Link to="/login">Already registered? login</Link>
    </div>
  )}
  </>
  )}

   {isAuthenticated ? (
          <>
            <div className="user_pic">
              <img src={user.user.avatar.url} alt={user.user.name}/>
            </div>
            <p className="user_name">{user.user.name}</p>
            {Active?(<IoCloseSharp/>):(<IoIosArrowDown />)}
          </>
        ) : (
          <Link to='/login' className="login-btn">login</Link>
        )}